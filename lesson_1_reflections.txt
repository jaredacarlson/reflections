How did viewing a diff between two versions of a file help you see the bug that
was introduced?

I was able to observe the lines of the two files next to each other and in this
way it was easy to spot any differences between the two.


How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

If I break the code, I can easily restore to a previous functioning version.
It may also be able to have old versions to understand how certain data
may have been produced in the past.


What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
Docs does?

Pros: You can choose logical endpoints after which to commit your changes.
Cons:  Possible that work may not get save if computer crashes because
their is not automatic save functionality.


Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

Google Docs treats each file separately because it is a system designed to
manage documents that stand alone and do not have functionality that depends
on another document within the system.

Git on the other hand is used for code files which files can call functions
from each other and hence are interdependent.  Git therefore saves the state
of each of these files in the repository in order to preserve the state
of their interdependence at this time.


How can you use the commands git log and git diff to view the history of files?

git log allows me to see all the commits, their ids, and messages to see
the complete history of all the commits and a summary of the changes
contained in each.  git diff allows me to, given the commit ids of two
different commits, see the changes between a file in one commit to the next.


How might using version control make you more confident to make changes that
could break something?

Using version control makes me more confident to make changes that might break
something because I know I can always revert to a functioning version of the
code.


Now that you have your workspace set up, what do you want to try using Git for?

I'd like to use it to program Bayesian data analysis methods for work.
